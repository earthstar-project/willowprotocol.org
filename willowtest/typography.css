body, .normal_text {
    font-size: 1.1rem;
}

body, .normal_text, code .aside {
    font-family: 'Iowan Old Style', 'Palatino Linotype', 'URW Palladio L', P052, serif;
}

a {
    color: var(--dark-green);
    transition: 100ms all;
}

a:hover {
    color: var(--green)
}

main a[href]:not(:where(
  /* exclude hash only links */
  [href^="#"],
  /* exclude relative but not double slash only links */
  [href^="/"]:not([href^="//"]),
  /* domains to exclude */
  [href*="//willowprotocol.org"]
)):after {
  display: inline;
  content: 'â†—';
  font-family: ui-sans-serif;
  font-size: 0.9em;
  text-decoration: none;
  text-decoration-thickness: 0;
}

strong {
    font-variant: all-small-caps;
    font-weight: normal;
}

a[aria-disabled=true] {
    color: grey;
}

a[aria-disabled=true]:hover {
    color: grey;
}

h1 a, h2 a, h3 a, h4 a, h5 a, h6 a {
    color: inherit;
    text-decoration: none;
}

p {
    line-height: 1.45;
    margin: 1em 0;
}

.aside {
    color: var(--nearly-nearly-black);
}

.aside.long {
    border: 1px solid var(--light-green);
    border-width: 1px 0;
}

/* Definitions produced by the `def` macro. */
dfn>a {
    font-style: normal;
    font-weight: normal;
    color: #185ecc;
    text-decoration: unset;
}

dfn>a:hover {
    color: #185ecc;
}

/* Inline normative content, produced by the `normative` macro. */
span.normative {
    padding: 0 1ch;
    background: radial-gradient(ellipse, rgb(210, 255, 143), #f2f2f2);
    border-top-left-radius: 20px;
    border-top-right-radius: 10px;
    border-bottom-right-radius: 18px;
    border-bottom-left-radius: 11px;
    box-decoration-break: clone;
}

/* A normative paragraph, produced by the `pnormative` macro. */
/* p.normative {
    border-left: var(--green) 8px solid;
    padding-left: 1rem;
    margin-left: calc(-1rem - 8px);
    background: linear-gradient(to right, #e0ffd5, #fff);
} */

/* An informative paragraph, produced by the `pinformative` macro. */
p.normative {
    border-left: #0979c4 8px solid;
    padding-left: 1rem;
    margin-left: calc(-1rem - 8px);
    background: linear-gradient(to right, #e3f3ff, #fff 16%);
}

a.ref, a.param, a.value {
  color: var(--nearly-black);
  text-decoration-style: dotted;
  text-decoration-color: rgb(112, 132, 132);
}

a.def {
  color: var(--nearly-black);
  font-style: italic;
}

a.def.ref {
  font-style: normal;
}

a.def:hover {
  color: inherit;
}

a.ref:hover, a.param:hover, a.value:hover {
  background: rgba(255, 228, 0, 0.199);
  padding: 0.2em 0;
  text-decoration-color: var(--nearly-black);
  border-radius: 5px;
}

code, a.ref.type, a.ref.member, a.ref.variant, a.ref.param, dfn > a.param, a.ref.value, dfn > a.value, .path {
    font-family: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono', monospace;
    font-size: 0.9em;
    word-break: break-word;
}

.pseudocode a.value, .pseudocode a.param, .pseudocode a.ref, .pseudocode a.def, .pseudocode a.ref.def {
  color: inherit;
  font-size: 1em;
  font-style: normal;
  text-decoration: underline;
  text-decoration-style: dotted;
  text-decoration-color: inherit;
}

.defined_here {
  color: var(--nearly-black);
  text-decoration: none;
  background: rgba(255, 228, 0, 0.309);
  border-radius: 5px;
  padding: 0.2em;  
}

/* since `important` is evil... */
body .katex {
    font-size: inherit;
    line-height: inherit;
}

aside.long {
  border: 1px solid var(--light-green);
  border-width: 1px 0;
  padding: 1em 0.75em;
  margin: 2em 0;
}
  
figcaption {
  font-size: 1rem;
}

p.introductory  {
  font-size: 1.5rem;
}

.path {
  white-space: nowrap;
}

.path_segment {
  padding: 0.1em 0.3em;
  transform: skewX(-13deg);
  display: inline-block;
  margin: 0 1px;
  background: rgba(0, 0, 0, 0.05);
}

.path_segment_txt {
  transform: skewX(13deg);
  display: inline-block;
}

.path_segment:first-child {
  border-radius: 3px 0 0 3px;
}

.path_segment:last-child {
  border-radius: 0 3px 3px 0;
}

.path_segment:only-child {
  border-radius: 3px;
}


.path_segment:nth-child(even) {
   color: rgb(86,180,233);

}

.path_segment:nth-child(odd) {
  color: rgb(0,114, 178);
  background: rgba(0, 0, 0, 0.08);
}